<?xml version="1.0"?>
<ruleset name="Fathom Standard">

 <!--
    The name attribute of the ruleset tag is displayed
    when running PHP_CodeSniffer with the -v command line
    argument. The description tag below is not displayed anywhere
    except in this file, so it can contain information for
    developers who may change this file in the future.
 -->
 <description>Some standards for php</description>
 <rule ref="Generic.Classes.DuplicateClassName" />
 <rule ref="Generic.CodeAnalysis" />
 <rule ref="Generic.ControlStructures" />
 <rule ref="Generic.Files.EndFileNewline" />

 <rule ref="Generic.Files.LineLength">
  <properties>
   <property name="lineLimit" value="150"/>
   <property name="absoluteLineLimit" value="300"/>
  </properties>
 </rule>

 <rule ref="Generic.Files.LineEndings">
  <properties>
   <property name="eolChar" value="\n" />
  </properties>
 </rule>

 <rule ref="Generic.Files.OneClassPerFile" />
 <rule ref="Generic.Files.OneInterfacePerFile" />
 <rule ref="Generic.Functions.CallTimePassByReference" />
 <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman" />
 <rule ref="Generic.Metrics.CyclomaticComplexity">
  <properties>
   <property name="complexity" value="10" />
  </properties>
 </rule>
 <rule ref="Generic.Metrics.NestingLevel" />
 <rule ref="Generic.NamingConventions.ConstructorName" />
 <rule ref="Generic.NamingConventions.UpperCaseConstantName" />

 <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag" />
 <rule ref="Generic.PHP.DeprecatedFunctions" />
 <rule ref="Generic.PHP.DisallowShortOpenTag" />
 <rule ref="Generic.PHP.ForbiddenFunctions" />
 <rule ref="Generic.PHP.LowerCaseConstant" />
 <rule ref="Generic.PHP.LowerCaseKeyword" />
 <rule ref="Generic.PHP.NoSilencedErrors" />

 <rule ref="Generic.Strings.UnnecessaryStringConcat" />

 <rule ref="Generic.WhiteSpace.DisallowTabIndent" />
 <rule ref="Generic.WhiteSpace.ScopeIndent">
  <properties>
   <property name="indent" value="2"/>
  </properties>
 </rule>


 <rule ref="PSR2.ControlStructures.ControlStructureSpacing" />
 <rule ref="PSR2.ControlStructures.ElseIfDeclaration" />
 <rule ref="PSR2.ControlStructures.SwitchDeclaration">
  <properties>
   <property name="indent" value="2"/>
  </properties>
 </rule>
 <!-- close, but wants } else { not }\n else {\n
 <rule ref="PEAR.ControlStructures.ControlSignature" />
 -->

 <!-- if () { -->
 <rule ref="PEAR.Functions.FunctionCallSignature">
  <properties>
   <property name="indent" value="2"/>
  </properties>
 </rule>
 <rule ref="PEAR.Functions.ValidDefaultValue"/>

 <!-- wants crazy indenting not single scope indent
 <rule ref="Squiz.Arrays.ArrayBracketSpacing" />
 <rule ref="Squiz.Arrays.ArrayDeclaration" />
 -->
 <rule ref="Squiz.Functions.FunctionDeclaration" />
 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing" >
   <properties>
     <property name="equalsSpacing" value="1" />
   </properties>
 </rule>
 <rule ref="Squiz.Functions.FunctionDuplicateArgument" />
 <rule ref="Squiz.Objects.ObjectInstantiation" />
 <rule ref="Squiz.Operators.ValidLogicalOperators" />

 <rule ref="Squiz.PHP.DisallowMultipleAssignments" />
 <rule ref="Squiz.PHP.DiscouragedFunctions" />
 <rule ref="Squiz.PHP.Eval" />
 <rule ref="Squiz.PHP.Heredoc" />
 <rule ref="Squiz.PHP.InnerFunctions" />
 <rule ref="Squiz.PHP.NonExecutableCode" />
 <rule ref="Squiz.Scope.MemberVarScope" />
 <rule ref="Squiz.Scope.MethodScope" />
 <rule ref="Squiz.Scope.StaticThisUsage" />
 <!--
 <rule ref="Squiz.Strings.DoubleQuoteUsage" />
 -->
 <rule ref="Squiz.Strings.EchoedStrings" />
 <rule ref="Squiz.WhiteSpace.CastSpacing" />
 <rule ref="Squiz.WhiteSpace.FunctionSpacing">
    <properties>
        <property name="spacing" value="2"/>
    </properties>
 </rule>
 <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
 <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.ScopeClosingBrace" />
 <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing" />
 <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />



 <rule ref="Zend.Files.ClosingTag" />
 <rule ref="./Trulia" />
 <!--
    Include some specific sniffs from the Generic standard.
    Note again that the name of the sniff is the code that
    PHP_CodeSniffer gives it.
 <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
 <rule ref="Generic.Commenting.Todo"/>
 <rule ref="Generic.ControlStructures.InlineControlStructure"/>
 -->

</ruleset>
