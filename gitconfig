[user]
  name = JD Cantrell
  email = jd@goodrobot.net
[alias]
  co = checkout
  st = status -sb

  #log aliases
  lol = log --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  lol-merge = log --graph --decorate --pretty=oneline --abbrev-commit --all --simplify-merges --merges

  #checkout a branch that matches a string
  f = !sh -c 'git checkout "$(git branch | grep $1 -m 1)"' -

  done = !sh -c 'git push origin $(git symbolic-ref HEAD --short)' -

  #find any branch that has been merged into master and delete it
  delete-merged = !git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d

  #find remote branches that have been merged and delete those (assume
  #you have a remote called `me`)
  delete-merged-remote = !git branch -r --merged | grep -v 'master$' | grep ' me' | sed -e 's/ me\\///' | xargs -n 1 git push me --delete

  #stash pr checkout use:
  #git pr origin 123
  pr = "!f() { git fetch $1 refs/pull-requests/$2/from:PR-$2; git checkout PR-$2; }; f"

  #authors
  authors = !git log --raw | grep "^Author: " | sort | uniq | cut -d ' ' -f2- | sed 's/^/- /'

  work = "!f() { git config user.email 'jd@arceo.ai'; }; f" -

  fix-author = commit --amend --author 'JD Cantrell <jd@arceo.ai>'

  last-week = log --since="last week" --decorate --date=short --pretty="%ad (%ar) -- %s" --author="$(git config --get user.name)"

  branch-name = "!git rev-parse --abbrev-ref HEAD"

  eng = !sh -c 'git checkout -b jd/ENG-$1 -t origin/staging' -

  #quality of life aliases
  new = checkout -b
  unstage = reset -q HEAD --
  discard = checkout --
  forget = checkout HEAD~1 --
  continue = rebase --continue
  delete-last-commit = reset --hard HEAD~1
  uncommit = reset HEAD~
  amend = commit --amend
  nevermind = !git reset --hard HEAD && git clean -d -f
  branches = branch -a
  remotes =  remote -v
  tags = tag
  stashes = stash list
  delete-commit = reset --hard HEAD~1
  undo-commit = reset --soft HEAD~1
  reset-me = "!git reset me/$(git branch-name) --hard"
  force-push = "push --force-with-lease"


[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
	ui = true
[core]
  autocrlf = input
  excludesfile = "~/.gitignore"
	pager = diff-so-fancy | less --tabs=4 -RFX
[github]
  user = jdcantrell
[push]
  default = current
[diff]
  compactionHeuristic = true
  algorithm = patience
[merge]
  ff = only
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[pull]
	ff = only
