[user]
  name = JD Cantrell
  email = jd@goodrobot.net
[alias]
  co = checkout
  st = status -sb

  #log aliases
  lol = log --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  lol-merge = log --graph --decorate --pretty=oneline --abbrev-commit --all --simplify-merges --merges

  #daily util methods for creating new branches and pushing to remote
  h = !sh -c 'git checkout -b H$1-CSSP-$2 -t origin/HAWK$1' -

  #checkout a branch that matches a string
  f = !sh -c 'git checkout "$(git branch | grep $1 -m 1)"' -

  done = !sh -c 'git push origin $(git symbolic-ref HEAD --short)' -

  #find any branch that has been merged into master and delete it
  delete-merged = !git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d

  #find remote branches that have been merged and delete those (assume
  #you have a remote called `me`)
  delete-merged-remote = !git branch -r --merged master | grep -v 'master$' | grep ' me' | sed -e 's/ me\\///' | xargs -n 1 git push me --delete

  #stash pr checkout use:
  #git pr origin 123
  pr = "!f() { git fetch $1 refs/pull-requests/$2/from:PR-$2; git checkout PR-$2; }; f"

  #authors
  authors = !git log --raw | grep "^Author: " | sort | uniq | cut -d ' ' -f2- | sed 's/^/- /'

  #setup forked push url and set email for trulia
  trulia = "!f() { source=$(git remote -v | grep 'origin' | grep 'fetch' | awk '{print $2}'); me=$(echo $source | sed -e 's/web/~jcantrell/'); git remote set-url --push origin $me; git remote add source $source; git remote add me $me; git config user.email 'jcantrell@trulia.com'; }; f" -

[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
[core]
  autocrlf = input
  excludesfile = "~/.gitignore"
[github]
  user = jdcantrell
[push]
	default = current
